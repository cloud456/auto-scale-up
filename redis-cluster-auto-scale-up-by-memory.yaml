AWSTemplateFormatVersion: 2010-09-09

Description: This cloudFormation template is used to scale up based on the memory usage of Elasticache For Redis (non-clustered edition), mainly for the BSJ and ZHY regions in China


Parameters:
  LambdaExecRole:
    Type: String
    Default: Lambda-Role-Redis-Scaleup-Role
  LambdaFunctionName:
    Type: String
    Default: Lambda-Function-Redis-Scaleup
  Threshold:
    Type: Number
    Default: 70
    Description: Threshold for memory usage,by defalut is 70%
  NodeType: 
    Type: String
    AllowedValues: 
            - cache.t3.micro
            - cache.t3.small
            - cache.t3.medium
            - cache.t2.micro
            - cache.t2.small
            - cache.t2.medium
            - cache.t4g.micro
            - cache.t4g.small
            - cache.t4g.medium
            - cache.m4.large
            - cache.m4.xlarge
            - cache.m4.2xlarge
            - cache.m4.4xlarge
            - cache.m4.10xlarge
            - cache.m6g.large
            - cache.m6g.xlarge
            - cache.m6g.2xlarge
            - cache.m6g.4xlarge
            - cache.m6g.8xlarge
            - cache.m6g.12xlarge
            - cache.m6g.16xlarge
            - cache.r4.large
            - cache.r4.xlarge
            - cache.r4.2xlarge
            - cache.r4.4xlarge
            - cache.r4.8xlarge
            - cache.r4.16xlarge
            - cache.r5.large
            - cache.r5.xlarge
            - cache.r5.2xlarge
            - cache.r5.4xlarge
            - cache.r5.12xlarge
            - cache.r5.24xlarge
            - cache.r6g.large
            - cache.r6g.xlarge
            - cache.r6g.2xlarge
            - cache.r6g.4xlarge
            - cache.r6g.8xlarge
            - cache.r6g.12xlarge
            - cache.r6g.16xlarge      
    Description: The type of node to be scale up when the memory usage reached the threshold
  ElasticacheGroupId: 
    Type: String


Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label: 
          default: Elasticache For Redis Configuration
        Parameters: 
          - ElasticacheGroupId
          - Threshold  
          - NodeType
      - Label: 
          default: Lambda Function Configuration
        Parameters:
          - LambdaFunctionName
          - LambdaExecRole


          
Resources:
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref LambdaExecRole
      AssumeRolePolicyDocument:
        Statement:
          - Action:
            - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
              - lambda.amazonaws.com
        Version: 2012-10-17
      ManagedPolicyArns:
        - arn:aws-cn:iam::aws:policy/AWSLambdaExecute
      Path: /
  
  LambdaFunctionPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: !Join ['-', [!Ref LambdaExecRole, 'Policy']]
      Roles:
          - Ref: LambdaRole
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - elasticache:*
            Resource: '*'

  
  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Ref LambdaFunctionName
      Description: Scale up based on Elasticache For Redis groupId and instance type.
      Runtime: python3.9
      Code:
        ZipFile: |

          import json
          import boto3
          import os


          def lambda_handler(event, context):
    
              client = boto3.client('elasticache')
              
              response = client.modify_replication_group(
                  ReplicationGroupId=os.environ.get('ElasticacheGroupId'),
                  ApplyImmediately=True,
                  CacheNodeType=os.environ.get('InstanceType'))
              return {
                  'statusCode': 200,
                  'body': json.dumps('Hello from Lambda!')
               }
      Handler: index.lambda_handler
      MemorySize: 128
      Timeout: 10
      Role: !GetAtt LambdaRole.Arn
      Environment:
        Variables:
          ElasticacheGroupId: !Ref ElasticacheGroupId
          InstanceType: !Ref NodeType
          
  NotificationSNSTopic: 
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub '${AWS::StackName}-AlarmNotification'
      Subscription:
        - Endpoint: !GetAtt LambdaFunction.Arn
          Protocol: LAMBDA
  
  LambdaFunctionInvokePermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref LambdaFunction
      Principal: sns.amazonaws.com
      SourceArn: !Ref NotificationSNSTopic
          
  MemoryUsageAlarmHigh: 
    Type: 'AWS::CloudWatch::Alarm'
    Properties: 
      AlarmDescription: Scale-up if Memory is greater than 70% for 10 minutes
      MetricName: DatabaseMemoryUsagePercentage
      Namespace: AWS/ElastiCache
      Statistic: Average
      Dimensions: 
        - Name: CacheClusterId
          Value: !Join ['-', [!Ref ElasticacheGroupId, '001']]
      Period: '300'
      EvaluationPeriods: '2'
      Threshold: !Ref Threshold
      AlarmActions:
         - !Ref NotificationSNSTopic
      ComparisonOperator: GreaterThanThreshold         
            